plugins {
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  id 'com.facebook.react'
  id 'com.cleveradssolutions.gradle-plugin' version '4.4.2'
}

react {
  autolinkLibrariesWithApp()
}

cas {
  useAdvertisingId = true

  adapters {
    // googleAds = true
  }
  // includeOptimalAds = true
}

repositories {
  google()
  mavenCentral()
  maven {
    name = "MintegralAdsRepo"
    url = uri("https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea")
    content { includeGroup("com.mbridge.msdk.oversea") }
  }
  maven {
    name = "PangleAdsRepo"
    url = uri("https://artifact.bytedance.com/repository/pangle")
    content { includeGroup("com.pangle.global") }
  }
  maven {
    name = "ChartboostAdsRepo"
    url = uri("https://cboost.jfrog.io/artifactory/chartboost-ads/")
    content { includeGroup("com.chartboost") }
  }
  maven {
    name = "YSONetworkRepo"
    url = uri("https://ysonetwork.s3.eu-west-3.amazonaws.com/sdk/android")
    content { includeGroup("com.ysocorp") }
  }
  maven {
    name = "OguryAdsRepo"
    url = uri("https://maven.ogury.co")
    content {
      includeGroup("co.ogury")
      includeGroup("co.ogury.module")
    }
  }
  maven {
    name = "SuperAwesomeRepo"
    url = uri("https://aa-sdk.s3-eu-west-1.amazonaws.com/android_repo")
    content { includeGroup("tv.superawesome.sdk.publisher") }
  }
}


def enableProguardInReleaseBuilds = false
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
  namespace 'com.cleveradssolutions.sample.reactnative'

  ndkVersion rootProject.ext.ndkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  compileSdk rootProject.ext.compileSdkVersion

  defaultConfig {
    applicationId 'com.cleveradssolutions.sample.reactnative'
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"
  }

  signingConfigs {
    debug {
      storeFile file('debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug { signingConfig signingConfigs.debug }
    release {
      signingConfig signingConfigs.debug
      minifyEnabled enableProguardInReleaseBuilds
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }
  kotlinOptions { jvmTarget = "17" }
}

dependencies {
  implementation 'com.facebook.react:react-android'

  if (hermesEnabled.toBoolean()) {
    implementation 'com.facebook.react:hermes-android'
  } else {
    implementation jscFlavor
  }
}
